heat_template_version: '2018-08-31'
description: provision k3s master

parameters:
  name:
    type: string
  master_keypair:
    type: string
  master_external_network:
    type: string
  master_private_network:
    type: string
  master_private_subnet:
    type: string
  master_image:
    type: string
  master_flavor:
    type: string
  pods_network_cidr:
    type: string
  disable_master_agent:
    type: boolean
  k3s_binary_url:
    type: string
  node_token_share_user:
    type: string
  node_token_share_secret:
    type: string

resources:
  secgrp_k3s_master:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
        - protocol: udp

  k3s_master:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: master_image }
      flavor: { get_param: master_flavor }
      key_name: { get_param: master_keypair }
      user_data_format: SOFTWARE_CONFIG
      software_config_transport: POLL_SERVER_HEAT
      user_data: { get_resource: k3s_master_init }
      networks:
      - port: { get_resource: k3s_master_eth0 }

  k3s_master_eth0:
    type: OS::Neutron::Port
    properties:
      network: { get_param: master_private_network }
      fixed_ips:
      - subnet: { get_param: master_private_subnet }
      allowed_address_pairs:
      - ip_address: { get_param: pods_network_cidr }
      security_groups:
      - { get_resource: secgrp_k3s_master }
      replacement_policy: AUTO

  k3s_master_floatingip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: master_external_network }
      port_id: { get_resource: k3s_master_eth0 }

  k3s_master_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: disable_selinux}
        - config: {get_resource: write_heat_params_master}
        - config: {get_resource: download_k3s_binary}
        - config: {get_resource: configure_k3s_master}
        - config: {get_resource: configure_rsync_master}
        - config: {get_resource: taint_k3s_master}

  disable_selinux:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: disable_selinux.sh }

  write_heat_params_master:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          params:
            "${K3S_BINARY_URL}": { get_param: k3s_binary_url }
            "${K3S_MASTER_PUBLIC_IP}": { get_attr: [ k3s_master_floatingip, floating_ip_address] }
            "${DISABLE_MASTER_AGENT}": { get_param: disable_master_agent }
            "${PODS_NETWORK_CIDR}": { get_param: pods_network_cidr }
            "${NODE_TOKEN_SHARE_USER}": { get_param: node_token_share_user }
            "${NODE_TOKEN_SHARE_SECRET}": { get_param: node_token_share_secret }
          template: { get_file: write_heat_params_master.sh }

  download_k3s_binary:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: download_k3s_binary.sh }

  configure_k3s_master:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: configure_k3s_master.sh }

  configure_rsync_master:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: configure_rsync_master.sh }

  taint_k3s_master:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: taint_k3s_master.sh }

outputs:
  master_private_ip:
    description: private ip of k3s master
    value: { get_attr: [k3s_master_eth0, fixed_ips, 0, ip_address] }
  master_public_ip:
    description: public ip of k3s master
    value: { get_attr: [ k3s_master_floatingip, floating_ip_address] }