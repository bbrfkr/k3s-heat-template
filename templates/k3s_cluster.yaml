heat_template_version: '2018-08-31'
description: provision k3s cluster

parameters:
  worker_count:
    type: number
    description: number of k3s nodes
    default: 1
  keypair:
    type: string
    description: keypair for instances belongs to k3s cluster
  external_network:
    type: string
    description: external network name to get floating ip
  private_network:
    type: string
    description: private network id for k3s cluster
    default: ""
  private_subnet:
    type: string
    description: private subnet id for k3s cluster
    default: ""
  private_subnet_cidr:
    type: string
    description: private subnet cidr for k3s cluster
    default: "10.0.0.0/24" 
  master_image:
    type: string
    description: image name for k3s server
  master_flavor:
    type: string
    description: flavor name for k3s server
  worker_image:
    type: string
    description: image name for k3s nodes
  worker_flavor:
    type: string
    description: flavor name for k3s nodes
  pods_network_cidr:
    type: string
    description: network cidr for pods network
    default: "10.42.0.0/16"
  disable_master_agent:
    type: boolean
    description: disable agent on master node 
    default: no
  k3s_binary_url:
    type: string
    description: url to download k3s binary
    default: "https://github.com/rancher/k3s/releases/download/v0.2.0/k3s"
  node_token_share_user:
    type: string
    description: username of rsync user to share node token
    default: rsync_admin
  node_token_share_secret:
    type: string
    description: password of rsync user to share node token
    default: password  


resources:
  network:
    type: network.yaml
    properties:
      external_network: { get_param: external_network }
      existing_network: { get_param: private_network }
      private_network_name:
        list_join:
        - '-'
        - [{ get_param: 'OS::stack_name' }, 'network']
      existing_subnet: { get_param: private_subnet }
      private_subnet_cidr: { get_param: private_subnet_cidr }

  masters:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: k3s-master.yaml
        properties:
          name:
            list_join:
              - '-'
              - [{ get_param: 'OS::stack_name' }, 'k3s-master', '%index%']
          master_keypair: { get_param: keypair }
          master_external_network: { get_param: external_network }
          master_private_network: { get_attr: [network, private_network] }
          master_private_subnet: { get_attr: [network, private_subnet] }
          master_image: { get_param: master_image }
          master_flavor: { get_param: master_flavor }
          pods_network_cidr: { get_param: pods_network_cidr }
          disable_master_agent: { get_param: disable_master_agent }
          k3s_binary_url: { get_param: k3s_binary_url }
          node_token_share_user: { get_param: node_token_share_user }
          node_token_share_secret: { get_param: node_token_share_secret }

  workers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: worker_count }
      resource_def:      
        type: k3s-worker.yaml
        properties:
          name:
            list_join:
              - '-'
              - [{ get_param: 'OS::stack_name' }, 'k3s-worker', '%index%']
          worker_keypair: { get_param: keypair }
          worker_external_network: { get_param: external_network }
          worker_private_network: { get_attr: [network, private_network] }
          worker_private_subnet: { get_attr: [network, private_subnet] }
          worker_image: { get_param: worker_image }
          worker_flavor: { get_param: worker_flavor }
          pods_network_cidr: { get_param: pods_network_cidr }
          k3s_binary_url: { get_param: k3s_binary_url }
          node_token_share_user: { get_param: node_token_share_user }
          node_token_share_secret: { get_param: node_token_share_secret }
          master_private_ip: { get_attr: [masters, resource.0.master_private_ip] }
          master_public_ip: { get_attr: [masters, resource.0.master_public_ip] }

outputs:
  master_private_ip:
    description: private ip of k3s master
    value: { get_attr: [masters, resource.0.master_private_ip] }
  master_public_ip:
    description: public ip of k3s master
    value: { get_attr: [masters, resource.0.master_public_ip] }
  config_dl_cmd:
    description: command to download admin kubeconfig of k3s cluster
    value:
      list_join:
      - ' && '
      - - list_join:
          - ' '
          - - 'scp'
            - list_join:
              - ':'
              - - list_join:
                  - '@'
                  - - 'centos'
                    - { get_attr: [masters, resource.0.master_public_ip] }
                - '/etc/rancher/k3s/k3s.yaml'
            - '~'
        - list_join:
          - ' '
          - - 'sed'
            - '-i'
            - list_join:
              - '/'
              - - "'s"
                - 'localhost'
                - { get_attr: [masters, resource.0.master_public_ip] }
                - "g'"
            - '~/k3s.yaml'
